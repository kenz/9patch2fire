/*************************************************
9patch2fire

created Kenji Matsuoka （http://firespeed.org）
Creative Commons Attribution 3.0.
*************************************************/
var dom = fw.getDocumentDOM();
var fileName = dom.docTitleWithoutExtension;
try{
	if(!fileName){
		fw.saveDocumentAs(null, true);
		var fileName = dom.docTitleWithoutExtension;
	}
	folderURL = fw.browseForFolderURL("Save as","file:///c/");
	if(!fileName || !folderURL){
		 throw new Error("Process cancelled");
	}

	fileName += ".9.png";
	var folder = folderURL.replace("file:///", "");

	folder = folder.replace("|", ":");
	if(fw.getDynamicSWFURL.indexOf("&plat=win")>0){
		folder = folder.replace(/\//g, "\\");
		folder += "\\output\\";
	}else{
		folder += "/output/";
	}
	folderURL += "/output/";
	var createFolder = new Folder (folder);
	createFolder.create();
	originalFile = folderURL+"originalImage.png";
	fw.saveDocumentCopyAs(null,originalFile); 
	var originalHeight = fw.getDocumentDOM().height;
	var originalWidth  = fw.getDocumentDOM().width;
	var originalDpi = 480;

	var dpis = new Array("drawable-xxhdpi",480,"drawable-xhdpi",320,"drawable-hdpi",240,"drawable-mdpi",160,"drawable-ldpi",120);
	var dpiLength = dpis.length;
	var layerLength = dom.layers.length;
	var editDom = fw.getDocumentDOM();
	// contentとpatchesのグループ解除しアンチエイリアスなしの塗りのみとする（丸めじのくりあがり防止）
	for(var j=0; j<layerLength; j++){
		if(editDom.layers[j].name == "patches" || editDom.layers[j].name == "content"){
			var elemsLength = editDom.layers[j].elems.length;
			var elems = editDom.layers[j].elems;
			for(var k=0; k<elemsLength; k++){
				var elem = elems[k];
				elem.pathAttributes.brush = null;
				elem.pathAttributes.fill.edgeType = "hard";
			}
		}
	}


	for(var i=0; i<dpiLength;i+=2){
		var editDocument = fw.openDocument(originalFile, true, false)
		var editDom = fw.getDocumentDOM();
		editDom.setBrushNColor({ alphaRemap:"none", angle:0, antiAliased:false, aspect:100, blackness:0, category:"bc_Pencil", concentration:100, dashOffSize1:2, dashOffSize2:2, dashOffSize3:2, dashOnSize1:8, dashOnSize2:1, dashOnSize3:1, diameter:1, feedback:"none", flowRate:0, maxCount:15, minSize:1, name:"bn_1-Pixel", numDashes:0, shape:"circle", softenMode:"bell curve", softness:0, spacing:15, textureBlend:0, textureEdge:0, tipColoringMode:"random", tipCount:1, tipSpacing:0, tipSpacingMode:"random", type:"simple" }, "#000000");
		var folderName = folder+dpis[i];
		var exportFolderURL =  folderURL+dpis[i];
		createFolder = new Folder (folderName);
		createFolder.create();

		var newDpi = dpis[i+1];
		var resizeHeight = Math.round(originalHeight * newDpi / originalDpi);
		var resizeWidth = Math.round(originalWidth * newDpi / originalDpi);

		if(originalDpi != newDpi){
			fw.getDocumentDOM().setDocumentImageSize({left:0, top:0, right:resizeWidth, bottom:resizeHeight}, {pixelsPerUnit:newDpi, units:"inch"}, true);

			for(var j=0; j<layerLength; j++){

			fw.getDocumentDOM().selectAllOnLayer(j, false, false);

			/*Fireworks標準スクリプト*/
			TransformNodes = function(){
				var n , cs, ns, ss = fw.selection.length;
				var distp, dists, angp, angs, ang, ppt, spt;
				while(ss--){
					cs = fw.selection[ss].contours.length;
					while (cs--){
						ns = fw.selection[ss].contours[cs].nodes.length;
						while (ns--){
							if (fw.selection[ss].contours[cs].nodes[ns].isSelectedPoint || fw.activeTool!='Subselection'){
								n = fw.selection[ss].contours[cs].nodes[ns];
								n.x = Math.round(n.x);
								n.y = Math.round(n.y);
								n.predX = Math.round(n.predX);
								n.predY = Math.round(n.predY);
								n.succX = Math.round(n.succX);
								n.succY = Math.round(n.succY);
							}
						}
					}
				}
			}
			try {
				TransformNodes();
			}catch(e){}
				/*Fireworks標準スクリプト　ここまで*/
			}
		}
		fw.getDocumentDOM().setDocumentCanvasSize({left:-1, top:-1, right:resizeWidth+1, bottom:resizeHeight+1}, true);
		for(var j=0; j<layerLength; j++){
			if(editDom.layers[j].name == "patches"){
				editDom.setLayerVisible(j, -1, false, false);
				var elemsLength = editDom.layers[j].elems.length;
				var elems = editDom.layers[j].elems;
				for(var k=0; k<elemsLength; k++){
					var elem = elems[k];
					fw.getDocumentDOM().addNewLine({x:0, y:Math.ceil(elem.top)}, {x:0, y:Math.ceil(elem.top+elem.height)-1});
					fw.getDocumentDOM().addNewLine({x:Math.ceil(elem.left), y:0}, {x:Math.ceil(elem.left+elem.width)-1, y:0});
				}
			}else if(editDom.layers[j].name == "content"){
				editDom.setLayerVisible(j, -1, false, false);
				var elemsLength = editDom.layers[j].elems.length;
				var elems = editDom.layers[j].elems;
				for(var k=0; k<elemsLength; k++){
					var elem = elems[k];
					fw.getDocumentDOM().addNewLine({x:resizeWidth+1, y:Math.ceil(elem.top)}, {x:resizeWidth+1, y:Math.ceil(elem.top+elem.height)-3});
					fw.getDocumentDOM().addNewLine({x:Math.ceil(elem.left), y:resizeHeight+1}, {x:Math.ceil(elem.left+elem.width)-1, y:resizeHeight+1});
				}
				
			}

		}
		fw.exportDocumentAs(null, exportFolderURL + "/"+fileName, null);
		fw.closeDocument(editDocument, false);
	}
} catch(e) {
	alert(e.message);
}
